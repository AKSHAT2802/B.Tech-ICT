# -*- coding: utf-8 -*-
"""Case_Study_PS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1y-yUj0EuC9pSb88rSZOt-T55SRvxImCc
"""

# BY AKSHAT KAKKAD 91900133038
import math
import matplotlib.pyplot as plot
#For generation of database
import random
x=[]
y=[]
N=int(input("Enter the length of data :  "))
for i in range(N):
  x.append(random.randint(100,500))
  y.append(random.randint(300,800))
#Analysis of database by Linear Regression using Least Square Estimation Meathod
Xsquare=[]
XY=[]
for i in x:
  Xsquare.append(i*i)
for i in range(N):
  XY.append(x[i]*y[i])
print("X= ",x,"Y= ",y,"X^2= ",Xsquare,"XY= ",XY,sep="\n")
sumx=0
sumy=0
sumXsq=0
sumXY=0
for i in range(N):
  sumx=sumx+x[i]
  sumy=sumy+y[i]
  sumXsq=sumXsq+Xsquare[i]
  sumXY=sumXY+XY[i]
print("Sum of X ",sumx,"Sum of Y ",sumy,"Sum of X^2 ",sumXsq,"Sum of XY",sumXY,sep="\n")

m=((N*sumXY)-(sumx*sumy))/((N*sumXsq)-(math.pow(sumx,2)))
b=(sumy-(m*sumx))/N
print("m =  ",round(m,4),"\tb =  ",round(b,4))
print("y = ",round(m,4),"x + ",round(b,4))
plot.scatter(x,y)
EqY=[]
err=[]
for i in range(N):
  EqY.append(round((round(m,4)*x[i])+round(b,4),2))
for i in range(N):
  err.append(round(EqY[i]-y[i],3))
print("X= ",x,"Y= ",y,"EqY= ",EqY,"Error= ",err,sep="\n")
plot.plot(x,EqY,color = "r")
plot.show()
ip=int(input("Enter cost to predict the number of pages  "))
ans=round((round(m,4)*ip)+round(b,4),0)
print("Predicted ANSWER for number of pages by Linear Regression using Least Square Estimation Meathod  ",ans,sep="\n")

# BY AKSHAT KAKKAD 91900133038
import math
import matplotlib.pyplot as plot
#For generation of database
import random
x=[14.4,4.2,27.5,33.8,38.0,15.9,4.9]
y=[54,64,44,32,38,68,62]
N=7

Xsquare=[]
XY=[]
for i in x:
  Xsquare.append(i*i)
for i in range(N):
  XY.append(x[i]*y[i])
print("X= ",x,"Y= ",y,"X^2= ",Xsquare,"XY= ",XY,sep="\n")
sumx=0
sumy=0
sumXsq=0
sumXY=0
for i in range(N):
  sumx=sumx+x[i]
  sumy=sumy+y[i]
  sumXsq=sumXsq+Xsquare[i]
  sumXY=sumXY+XY[i]
print("Sum of X ",sumx,"Sum of Y ",sumy,"Sum of X^2 ",sumXsq,"Sum of XY",sumXY,sep="\n")

m=((N*sumXY)-(sumx*sumy))/((N*sumXsq)-(math.pow(sumx,2)))
b=(sumy-(m*sumx))/N
print("m =  ",round(m,4),"\tb =  ",round(b,4))
print("y = ",round(m,4),"x + ",round(b,4))
plot.scatter(x,y,color = "r")
EqY=[]
err=[]
for i in range(N):
  EqY.append(round((round(m,4)*x[i])+round(b,4),2))
for i in range(N):
  err.append(round(EqY[i]-y[i],3))
print("X= ",x,"Y= ",y,"EqY= ",EqY,"Error= ",err,sep="\n")
plot.plot(x,EqY,color = "y")
plot.show()
ip=int(input("Enter cost to predict the number of pages  "))
ans=round((round(m,4)*ip)+round(b,4),0)
print("Predicted ANSWER for number of pages by Linear Regression using Least Square Estimation Meathod  ",ans,sep="\n")

# BY AKSHAT KAKKAD 91900133038
import math
import matplotlib.pyplot as plot
#For generation of database
import random
x=[222.89,58.59,58.59,108.48,147.98,65.83,147.98,147.98,115.23,11.22]
y=[24.31,27.76,22.51,19.41,25.47,31.80,18.22,52.31,19.94,3.87]
N=10

Xsquare=[]
XY=[]
for i in x:
  Xsquare.append(i*i)
for i in range(N):
  XY.append(x[i]*y[i])
print("X= ",x,"Y= ",y,"X^2= ",Xsquare,"XY= ",XY,sep="\n")
sumx=0
sumy=0
sumXsq=0
sumXY=0
for i in range(N):
  sumx=sumx+x[i]
  sumy=sumy+y[i]
  sumXsq=sumXsq+Xsquare[i]
  sumXY=sumXY+XY[i]
print("Sum of X ",sumx,"Sum of Y ",sumy,"Sum of X^2 ",sumXsq,"Sum of XY",sumXY,sep="\n")

m=((N*sumXY)-(sumx*sumy))/((N*sumXsq)-(math.pow(sumx,2)))
b=(sumy-(m*sumx))/N
print("m =  ",round(m,4),"\tb =  ",round(b,4))
print("y = ",round(m,4),"x + ",round(b,4))
plot.scatter(x,y,color = "r")
EqY=[]
err=[]
for i in range(N):
  EqY.append(round((round(m,4)*x[i])+round(b,4),2))
for i in range(N):
  err.append(round(EqY[i]-y[i],3))
print("X= ",x,"Y= ",y,"EqY= ",EqY,"Error= ",err,sep="\n")
plot.plot(x,EqY,color = "y")
plot.show()
ip=int(input("Enter Stock price to find ratio of price/earning "))
ans=round((round(m,4)*ip)+round(b,4),0)
print("Predicted ANSWER for price/earning by Linear Regression using Least Square Estimation Meathod  ",ans,sep="\n")