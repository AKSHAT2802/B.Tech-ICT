# -*- coding: utf-8 -*-
"""Task_9(PS).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_QveZVOo8b1sxS0kyhkFG2uDGC0vY5Kh
"""

# pyplot is the plotting module
import matplotlib.pyplot as plt
import random
# generate the data
xs = range(10) # 0...9
ys1 = range(10) # 0...9
ys2 = [random.randint(0, 20) for i in range(10)] # 10 random numbers from 0-19
# create a 10-inch x 5-inch figure
fig = plt.figure(figsize=(10,5))
# draw a line graph
plt.plot(xs, ys1, label='line 1')
plt.plot(xs, ys2, label='line 2')
# create the legend
plt.legend(loc='upper center', ncol = 4)
# finally, render and store the figure in an image
plt.savefig('twolines.png', format='png')

import matplotlib.pyplot as plt
import random
random.seed(0)
fig = plt.figure(figsize=(20, 10)) 
N = 100
xs = range(N)
y1 = [random.randint(0, 50) for i in xs]
y2 = range(N)

import numpy as np
left = np.arange(len(xs))
width = 0.25
subplot = fig.add_subplot(3,2,1)
subplot.bar(left, y2, width=width)

subplot = fig.add_subplot(323)
boxdata1 = [random.randint(0, 20) for i in range(10)]
boxdata2 = [random.randint(20,40) for i in range(10)]
boxdata3 = [random.randint(40,60) for i in range(10)]
data = [boxdata1, boxdata2, boxdata3]
subplot.boxplot(data)

# Line Plot
import math
import matplotlib.pyplot as plot
l1=[0,3,4,6,8,12,13,14,15,16]
l2=[4,2,4,2,2,3,4,2,3,2]
plot.plot(l1, l2, color='blue', linestyle='solid', linewidth = 2, marker='o', markerfacecolor='blue', markersize=7)# plotting the points
plot.xlabel('Marks')
plot.ylabel('Frequency of marks')
plot.title('Frequency Polygon')
plot.show()

#Scatter Plot

X=[307, 438, 240, 161, 379, 379, 139, 422, 140, 227]
Y= [351, 423, 473, 446, 541, 389, 335, 562, 619, 511]

plot.scatter(X,Y)

import numpy
town1_heights=[5,6,7,6,7.1,6,4]
town2_heights=[5.5,6.5,7,6,7.1,6]
town1_mean=numpy.mean(town1_heights)
town2_mean=numpy.mean(town2_heights)
print("Town1avg.height",town1_mean)
print("Town2avg.height",town2_mean)



import matplotlib.pyplot as plt

fig=plt.figure()
sub=fig.add_subplot(111)
sub.boxplot([town1_heights,town2_heights],whis=1)
sub.set_xticklabels(("Town1","Town2"))
sub.set_title("Town1vs.Town2Heights")
plt.savefig('town_boxplots.png',format='png')

import scipy.stats
print("Town1Shapiro‐Wilksp‐value",scipy.stats.shapiro(town1_heights)[1])

print("Mann‐WhitneyUp‐value",scipy.stats.mannwhitneyu(town1_heights,town2_heights)[1])

import math
import matplotlib.pyplot as plot
#For generation of database
import random
x=[]
y=[]
N=int(input("Enter the length of data :  "))
for i in range(N):
  x.append(random.randint(100,500))
  y.append(random.randint(300,800))
#Analysis of database by Linear Regression using Least Square Estimation Meathod
Xsquare=[]
XY=[]
for i in x:
  Xsquare.append(i*i)
for i in range(N):
  XY.append(x[i]*y[i])
print("X= ",x,"Y= ",y,"X^2= ",Xsquare,"XY= ",XY,sep="\n")
sumx=0
sumy=0
sumXsq=0
sumXY=0
for i in range(N):
  sumx=sumx+x[i]
  sumy=sumy+y[i]
  sumXsq=sumXsq+Xsquare[i]
  sumXY=sumXY+XY[i]
print("Sum of X ",sumx,"Sum of Y ",sumy,"Sum of X^2 ",sumXsq,"Sum of XY",sumXY,sep="\n")

m=((N*sumXY)-(sumx*sumy))/((N*sumXsq)-(math.pow(sumx,2)))
b=(sumy-(m*sumx))/N
print("m =  ",round(m,4),"\tb =  ",round(b,4))
print("y = ",round(m,4),"x + ",round(b,4))
plot.scatter(x,y)
EqY=[]
err=[]
for i in range(N):
  EqY.append(round((round(m,4)*x[i])+round(b,4),2))
for i in range(N):
  err.append(round(EqY[i]-y[i],3))
print("X= ",x,"Y= ",y,"EqY= ",EqY,"Error= ",err,sep="\n")
plot.plot(x,EqY,color = "r")
plot.show()
ip=int(input("Enter cost to predict the number of pages  "))
ans=round((round(m,4)*ip)+round(b,4),0)
print("Predicted ANSWER for number of pages by Linear Regression using Least Square Estimation Meathod  ",ans,sep="\n")